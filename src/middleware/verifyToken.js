const jwt = require('jsonwebtoken');
const User = require('../models/user.model');

const JWT_SECRET = process.env.JWT_SECRET_KEY;

// ğŸ”¹ Middleware zur Token-ÃœberprÃ¼fung
const verifyToken = (req, res, next) => {
    try {
        const token = req.cookies.token; // ğŸ”¹ Token aus Cookies holen
        // const token = req.headers.authorization?.split(" ")[1]; // ğŸ”¹ Alternative: Token aus Header holen
        
        if (!token) {
            return res.status(401).send({ message: 'Kein gÃ¼ltiger Token vorhanden' });
        }

        const decoded = jwt.verify(token, JWT_SECRET); // ğŸ”¹ Token entschlÃ¼sseln
        
        if (!decoded) {
            return res.status(401).send({ message: 'Token ungÃ¼ltig oder abgelaufen' });
        }

        req.userId = decoded.userId; // ğŸ”¹ Benutzer-ID zum Request hinzufÃ¼gen
        req.role = decoded.role; // ğŸ”¹ Benutzerrolle zum Request hinzufÃ¼gen
        next(); // ğŸ”¹ Weiter zur nÃ¤chsten Middleware/Funktion

    } catch (error) {
        console.log('Fehler bei der Token-ÃœberprÃ¼fung:', error);
        res.status(401).send({ message: 'Fehler bei der Token-ÃœberprÃ¼fung' });
    }
};

module.exports = verifyToken;
